#include "svg_path.hpp"

#include "point.hpp"
#include "cover.hpp"
#include "stroke_mesh.hpp"
#include "output/stl.hpp"

#include <iostream>
#include <algorithm>
#include <array>

#define DRAWING_WIDTH 640
#define DRAWING_HEIGHT 816

using std::cout, std::cerr, std::endl;
using std::for_each;

struct OutputVisitor : public PathVisitor
{
    virtual void begin(double x, double y) { 
        cout << "begin_path(" << x << " " << y << ");\n"; 
    }
    virtual void move(double x0, double y0, double x, double y) { 
        cout << "move(" << x << " " << y << ");\n";
    }
    virtual void line(double, double, double x, double y) {
        cout << "line(" << x << " " << y << ");\n";
    }
    virtual void arc(double, double, double rx, double ry, double a, bool large, bool sweep, double x, double y) {
        cout << "arc(" << rx << " " << ry << " " << a << " " << large << " " << sweep << " " << x << " " << y << ");\n";
    }
    virtual void bezier(double, double, double x1, double y1, double x2, double y2, double x, double y) {
        cout << "bezier(" << x1 << " " << y1 << " " << x2 << " " << y2 << " " << x << " " << y << ");\n";
    }
    virtual void quadratic(double, double, double x1, double y1, double x, double y) {
        cout << "quadratic(" << x1 << " " << y1 << " " << x << " " << y << ");\n";
    }
    virtual void end() {
        cout << "end_path();\n" << endl;
    }
};

int main(int ac, char * av[])
{
    OutputVisitor visitor;
    Plotter<Point> plotter;
    

    PathParser parser(plotter);


    // parser.parse("m 10 20, 20 10 C 40 30 40 40 30 40 Z");
    // parser.parse(R"(M 10,30
    //    A 20,20 0,0,1 50,30
    //    A 20,20 0,0,1 90,30
    //    Q 90,60 50,90
    //    Q 10,60 10,30 z)");

    string anis_bottom_glass = R"(
        m 262.325,478.45 0.294,3.554 0.862,3.451 1.403,3.331 1.913,3.194 2.397,3.038 2.85,2.866 3.276,2.676 3.673,2.468 4.041,2.243 4.381,2.001 4.692,1.74 4.975,1.464 5.228,1.169 5.454,0.856 5.651,0.527 5.818,0.179 
        h 2.526 
        l 5.819,-0.179 5.65,-0.527 5.454,-0.856 5.229,-1.169 4.974,-1.464 4.692,-1.74 4.381,-2.001 4.041,-2.243 3.673,-2.468 3.276,-2.676 2.85,-2.866 2.396,-3.038 1.914,-3.194 1.402,-3.331 0.862,-3.451 0.294,-3.554 -0.091,-2.179 -0.267,-2.165 -0.432,-2.143 -0.583,-2.111 -1.582,-4.097 -2.057,-3.873 
        H 267.339 
        l -2.058,3.873 -1.582,4.097 -0.584,2.111 -0.432,2.143 -0.267,2.165 -0.091,2.179 
        v 0)";
    string anis_top_glass = "m 355.535,435.764 c -3.689,-5.272 -7.359,-10.555 -11.036,-15.834 h -48.005 c -3.676,5.279 -7.346,10.562 -11.036,15.834 -5.44,7.772 -10.721,15.672 -16.298,23.347 -0.644,0.888 -1.246,1.819 -1.821,2.771 h 106.315 c -0.576,-0.952 -1.178,-1.884 -1.822,-2.771 -5.577,-7.675 -10.856,-15.575 -16.297,-23.347 z";
    string anis_glass_highlight = "m 284.82,474.084 c 0,-6.084 2.163,-12.11 5.278,-16.982 4.31,-6.732 8.385,-13.666 12.587,-20.488 1.963,-3.189 3.917,-6.39 5.874,-9.585 l -8.629,-0.02 c -2.842,4.186 -5.674,8.377 -8.524,12.562 -4.199,6.168 -8.275,12.434 -12.581,18.52 -3.118,4.402 -5.28,9.849 -5.28,15.347 0,12.633 13.546,23.253 32.011,26.517 -12.433,-5.391 -20.736,-14.946 -20.736,-25.871 z";
    string anis_glass_shadow = "m 387.268,463.343 c -5.308,-8.722 -12.157,-16.587 -18.226,-24.781 -6.963,-9.404 -13.789,-18.908 -20.732,-28.326 h -27.813 -27.813 c -6.943,9.418 -13.77,18.922 -20.733,28.326 -6.068,8.194 -12.918,16.06 -18.224,24.781 -7.221,11.864 -4.963,25.995 4.237,36.102 6.501,7.138 15.252,12.067 24.261,15.299 5.82,2.086 11.529,3.535 17.563,4.837 4.559,0.988 8.694,2.889 11.086,7.114 2.971,5.246 1.834,11.681 1.377,17.394 -0.441,5.464 -1.045,10.985 -2.195,16.354 -0.246,1.142 -0.519,2.383 -0.926,3.558 -26.092,1.285 -45.878,7.459 -45.878,14.88 0,8.355 25.065,15.129 55.981,15.129 30.913,0 55.979,-6.773 55.979,-15.129 0,-7.178 -18.491,-13.181 -43.294,-14.737 -0.438,-1.215 -0.727,-2.513 -0.98,-3.7 -1.15,-5.368 -1.755,-10.89 -2.193,-16.354 -0.46,-5.713 -1.597,-12.147 1.376,-17.394 2.391,-4.226 6.526,-6.126 11.086,-7.114 6.033,-1.302 11.743,-2.751 17.563,-4.837 9.009,-3.231 17.76,-8.161 24.261,-15.299 9.197,-10.108 11.456,-24.239 4.237,-36.103 z";
    string anis_glass_edge = "m 292.7168,407.04102 c -6.17327,3.15766 -8.49982,10.87057 -13.20196,15.76934 -9.22918,13.4221 -20.15089,25.64516 -28.79479,39.45951 -8.24148,13.3607 -4.29646,31.67186 7.35872,41.73117 11.65404,11.34878 27.80084,15.68204 43.17544,19.36571 7.51627,1.47588 9.46972,9.96361 8.41181,16.48091 -0.90551,8.48958 -0.2103,17.40677 -3.23765,25.4943 -3.56831,6.42192 -10.45369,10.90071 -17.81899,11.36898 11.94439,1.39599 24.15246,-8.31432 24.59587,-20.51685 1.35746,-9.04356 3.93901,-18.42042 1.83102,-27.52027 -2.21738,-8.98552 -11.75923,-12.07183 -19.81224,-13.42881 -15.98828,-3.88983 -33.63911,-11.26279 -40.71056,-27.26263 -4.00236,-9.60702 -0.85326,-20.45815 5.45322,-28.27184 11.53311,-15.36084 23.13621,-30.67238 34.33604,-46.28281 17.46159,-0.007 34.92318,-0.008 52.38477,0 11.51682,16.20039 23.71713,31.89821 35.46256,47.92413 7.82644,9.6974 8.25592,24.62161 -0.11524,34.15547 -10.87189,13.3381 -28.18044,17.98458 -44.2147,21.73538 -9.59929,2.26389 -14.30405,12.87733 -12.51983,22.03082 1.21427,8.3829 1.62669,17.08222 4.59568,25.0466 4.0675,8.14042 13.40998,13.3793 22.48684,12.39276 -10.40215,-0.58548 -20.20634,-9.52282 -19.7539,-20.32227 -0.6363,-8.26238 -2.07668,-16.67159 -0.96133,-24.92588 1.62702,-8.33487 11.4074,-8.76974 18.01448,-10.66674 17.16378,-4.20014 35.50321,-13.31511 42.76018,-30.46309 4.74982,-11.5193 1.50671,-24.81095 -6.15018,-34.27247 -11.89404,-15.83418 -23.84383,-31.62946 -35.40534,-47.71283 -3.93192,-2.68562 -8.98359,-0.64608 -13.39427,-1.30637 -14.92522,0.01 -29.85043,8.9e-4 -44.77565,-0.002 z";
    string anis_glass_base = "m 308.93359,561.24414 c -13.21558,0.65404 -24.84314,2.52535 -33.39062,5.26953 -4.27374,1.37209 -7.78185,2.94397 -10.41992,4.86133 -2.63808,1.91736 -4.63086,4.42497 -4.63086,7.50391 0,3.4683 2.45467,6.15927 5.67187,8.21484 3.2172,2.05557 7.52771,3.73151 12.76367,5.14648 10.47194,2.82996 24.64523,4.52735 40.30469,4.52735 15.6585,0 29.82912,-1.69727 40.30078,-4.52735 5.23584,-1.41504 9.54654,-3.09294 12.76367,-5.14843 3.21714,-2.0555 5.67383,-4.74467 5.67383,-8.21289 0,-2.98083 -1.88266,-5.43931 -4.38281,-7.32032 -2.50015,-1.88101 -5.81806,-3.42256 -9.86133,-4.77929 -8.08653,-2.71347 -19.09651,-4.61278 -31.6914,-5.39844 l -0.34375,5.50781 c 12.23707,0.76334 22.90229,2.64506 30.28125,5.1211 3.68947,1.23801 6.55142,2.64431 8.29882,3.95898 1.74741,1.31467 2.17969,2.30049 2.17969,2.91016 0,0.70927 -0.67639,1.99998 -3.125,3.56445 -2.44861,1.56447 -6.33776,3.14787 -11.23242,4.4707 -9.78931,2.64567 -23.60586,4.33594 -38.86133,4.33594 -15.25651,0 -29.07569,-1.69039 -38.86523,-4.33594 -4.89478,-1.32277 -8.78186,-2.90621 -11.23047,-4.4707 -2.44861,-1.56449 -3.12695,-2.85476 -3.12695,-3.56445 0,-0.63006 0.47724,-1.67451 2.35742,-3.04102 1.88017,-1.36651 4.93857,-2.81091 8.86133,-4.07031 7.8455,-2.51881 19.12812,-4.37771 31.97851,-5.01367 z";
    string anis_glass_base_path = "m 331.864,564.135 c 24.832,1.549 43.347,7.563 43.347,14.744 0,8.355 -25.065,15.129 -55.979,15.129 -30.916,0 -55.981,-6.773 -55.981,-15.129 0,-7.418 19.753,-13.59 45.819,-14.88";
    

    MeshPlot c({DRAWING_WIDTH, DRAWING_HEIGHT});


    parser.parse(anis_glass_base_path);

    auto plot = plotter.plot();

    c.stroke("anis_base", plot.paths(), BrushStyle::BrushRound, 5.5179);

    // cout << "x, y" << endl;
    // for_each(plot.begin(), plot.end(), [](auto const & path) {
    //     for_each(path.begin(), path.end(), [](auto const & p) {
    //         cout << p.x << ", " << p.y << endl;
    //     });
    // });
    
    // auto triangles = mapbox::earcut(plot);

    // MeshCover c(plot.paths());

    // for(Triangle const & c : c.triangles())
    // {
    //     cout << c.p0.x << ", " << c.p0.y << ",\n"
    //          << c.p1.x << ", " << c.p1.y << ",\n"
    //          << c.p2.x << ", " << c.p2.y << ",\n";
    // }

    cout << STLOutput(c.triangles()) << endl;


    return 0;
}