#include <iostream>
using std::cout, std::cerr, std::endl;

#include "cover.hpp"
#include "mesh.hpp"
#include "output/stl.hpp"
#include "output/c.hpp"
#include "parser.hpp"
#include "plotter.hpp"

#include <vector>
using std::vector;

int main(int ac, char * av[])
{
    // Point p0(0, 0);
    // Point p1(0, 1);
    // Point p2(1, 1);
    // Point p3(1, 0);
    // Point p3a(0.5, 0);
    // Point p4(1, -1);

    // vector<Point> outline{p0, p1, p2};

    // MeshCover c(outline);
    // cerr << c.area() << endl;

    // outline.push_back(p3);

    // c = MeshCover(outline);
    // cerr << c.area() << endl;

    // outline.push_back(p4);
    // c = MeshCover(outline);
    // cerr << c.area() << endl;

    // // STLOutput out(c.triangles());

    // // cout << out << endl;

    // // c = MeshCover({p0, p1, p2, p3a, p4});

    // // test with holes
    // vector<vector<Point>> poly_with_hole{
    //     { { -2., -2. }, { 2., -2. }, { 2., 2. }, { -2., 2. } },
    //     { { -1, -1 }, { 1, -1 }, { 1, 1 }, { -1, 1 } },
    // };

    // c = MeshCover(poly_with_hole);

    // cout << STLOutput(c.triangles()) << endl;

    // Plotter plotter(5000);

    // apostrophe
    //SVGPath itsfive("m 300.32741,416.13547 v 5.94373 l -3.19976,12.47402 h 5.03378 l 6.39953,-12.47402 v -5.94373 z m -55.37743,1.83786 v 7.93801 h 8.1555 v -7.93801 z m 24.85283,4.88794 v 11.1445 h -6.94584 v 5.98283 h 6.78975 v 19.70816 c 0,2.55476 0.3772,4.7967 1.13163,6.7258 0.78042,1.9291 1.71694,3.41504 2.80955,4.4578 1.0926,1.04276 2.38031,1.89 3.86313,2.54173 1.50884,0.62565 2.84858,1.01669 4.01922,1.1731 1.17064,0.15642 2.36731,0.23462 3.58998,0.23462 1.11862,0 2.05514,-0.0521 2.80955,-0.15641 v -6.49118 l -1.83401,0.0782 c -0.96253,0 -1.86003,-0.10428 -2.69249,-0.31283 -0.83245,-0.20855 -1.74296,-0.59958 -2.7315,-1.17311 -0.96254,-0.59958 -1.74297,-1.56414 -2.3413,-2.89365 -0.57232,-1.32952 -0.85847,-2.95883 -0.85847,-4.88794 v -19.0043 h 9.63832 v -5.98283 h -9.63832 v -11.1445 z m 56.98902,10.16691 c -4.00621,0 -7.50515,0.95151 -10.4968,2.85455 -2.96563,1.90304 -4.44845,4.69243 -4.44845,8.36815 0,1.74662 0.33819,3.31077 1.01456,4.69242 0.70239,1.35559 1.75596,2.51566 3.16074,3.48021 1.43079,0.96456 2.7055,1.72056 3.82411,2.26801 1.14464,0.54744 2.67948,1.1731 4.60455,1.87696 0.28615,0.10428 0.66336,0.23463 1.13162,0.39104 3.19977,1.12097 5.48904,2.13765 6.8678,3.05007 1.37875,0.91242 2.06814,2.2289 2.06814,3.94945 0,1.64235 -0.76743,2.91973 -2.30227,3.83215 -1.53485,0.9124 -3.47292,1.36862 -5.81422,1.36862 -2.47136,0 -4.64356,-0.44318 -6.51659,-1.32952 -1.84702,-0.88635 -2.77053,-2.12463 -2.77053,-3.71483 v -2.65904 h -6.78975 v 4.34049 c 0,2.99793 1.61289,5.37022 4.83867,7.11683 3.25179,1.72056 6.90682,2.58083 10.96505,2.58083 4.76063,0 8.64978,-1.05579 11.66745,-3.16738 3.04367,-2.13766 4.56552,-5.07042 4.56552,-8.79829 0,-1.74661 -0.37721,-3.31075 -1.13163,-4.69241 -0.7284,-1.40773 -1.84702,-2.58084 -3.35585,-3.51932 -1.48282,-0.96455 -2.83557,-1.70752 -4.05824,-2.2289 -1.22268,-0.54745 -2.82256,-1.14704 -4.79965,-1.79876 -1.53485,-0.52138 -2.73151,-0.95152 -3.58998,-1.29041 -0.85848,-0.36497 -1.808,-0.83422 -2.84858,-1.40773 -1.04057,-0.59959 -1.78198,-1.25131 -2.22423,-1.95517 -0.44224,-0.72994 -0.66336,-1.55112 -0.66336,-2.46352 0,-1.56414 0.68938,-2.76332 2.06814,-3.59753 1.37877,-0.86028 3.08271,-1.29041 5.11182,-1.29041 1.97709,0 3.65503,0.39103 5.03378,1.1731 1.37877,0.756 2.06815,1.74663 2.06815,2.97187 v 2.65904 h 6.78975 v -4.88794 c 0,-2.65904 -1.48283,-4.67939 -4.44846,-6.06104 -2.93963,-1.40773 -6.11339,-2.11159 -9.52126,-2.11159 z m -88.39747,0.97759 v 5.98283 h 6.71171 v 28.50645 h -6.32149 v 6.02194 h 20.48631 v -6.02194 h -6.39953 v -34.48928 z m 0.4468,60.01995 -11.4021,114.81763 18.84546,6.80988 4.59283,-2.85065 c 3.27296,-2.006 8.23523,-3.95923 14.88673,-5.85966 6.65149,-2.006 13.5664,-3.00901 20.7458,-3.00901 15.62574,0 28.19073,4.32876 37.69287,12.98627 9.50214,8.6575 14.25262,20.1129 14.25262,34.36611 0,12.98625 -5.01472,24.01932 -15.04476,33.09915 -9.92445,9.07982 -22.11833,13.61974 -36.5827,13.61974 -9.7133,0 -19.1113,-2.16438 -28.19112,-6.49313 -9.07982,-4.32875 -14.99218,-7.76009 -17.73725,-10.294 -2.63948,-2.63948 -4.69705,-4.80386 -6.17516,-6.49313 l -16.94706,22.64679 4.27677,4.5927 c 18.05406,16.68154 40.17248,25.02233 66.35614,25.02233 23.86093,0 43.65753,-7.39058 59.38885,-22.17168 15.8369,-14.88669 23.75632,-33.15197 23.75632,-54.79573 0,-20.69354 -7.39094,-37.95582 -22.17204,-51.78671 -14.67553,-13.93647 -33.67941,-20.90473 -57.01244,-20.90473 -13.19741,0.10558 -24.01959,2.53391 -32.46593,7.28498 h -0.6341 l 1.58427,-9.18541 5.85909,-54.79572 h 62.23937 v 29.13992 h 28.34721 v -55.74594 z");

    // i's dot
    //SVGPath itsfive("m 245.20676,425.46457 v -7.92969 h 8.16406 v 7.92969 z m -6.17188,48.55469 v -6.01563 h 6.32813 v -28.47656 h -6.71875 v -5.97656 h 14.49218 v 34.45312 h 6.40625 v 6.01563 z");

    // t (broken)
    //SVGPath itsfive("m 269.92892,459.21457 v -19.6875 h -6.79687 v -5.97656 h 6.95312 v -11.13282 h 7.61719 v 11.13282 h 9.64844 v 5.97656 h -9.64844 v 18.98437 q 0,2.89063 0.85938,4.88282 0.89843,1.99218 2.34375,2.89062 1.48437,0.85938 2.73437,1.17188 1.25,0.3125 2.69531,0.3125 l 1.83594,-0.0781 v 6.48438 q -1.13281,0.15625 -2.8125,0.15625 -1.83594,0 -3.59375,-0.23438 -1.75781,-0.23437 -4.02344,-1.17187 -2.22656,-0.97657 -3.86718,-2.53907 -1.64063,-1.5625 -2.8125,-4.45312 -1.13282,-2.89063 -1.13282,-6.71875 z");

    // apostrophe
    //SVGPath itsfive("m 300.64301,415.69894 h 8.24218 v 5.9375 l -6.40625,12.46094 h -5.03906 l 3.20313,-12.46094 z");

    //SVGPath itsfive("m 300.327,416.135 v 5.944 l -3.199,12.474 h 5.033 l 6.4,-12.474 v -5.944 z m -55.377,1.838 v 7.938 h 8.155 v -7.938 z m 24.853,4.888 v 11.145 h -6.946 v 5.983 h 6.79 v 19.708 l 1.131,6.726 2.81,4.457 3.863,2.542 4.019,1.173 3.59,0.235 2.81,-0.157 v -6.491 l -1.834,0.078 -2.693,-0.312 -2.731,-1.174 -2.342,-2.893 -0.858,-4.888 v -19.004 h 9.638 v -5.983 h -9.638 v -11.145 z m 56.989,10.167 -5.629,0.714 -4.868,2.141 -3.336,3.519 -1.112,4.849 1.014,4.692 3.161,3.481 3.824,2.268 4.605,1.876 1.131,0.392 6.868,3.05 1.551,1.671 0.517,2.278 -0.575,2.19 -1.727,1.642 -2.605,1.027 -3.209,0.342 -6.517,-1.33 -2.078,-1.593 -0.693,-2.122 v -2.659 h -6.789 v 4.341 l 1.209,4.028 3.629,3.089 5.181,1.935 5.784,0.646 6.488,-0.792 5.18,-2.376 3.424,-3.803 1.141,-4.995 -1.131,-4.693 -3.356,-3.519 -4.058,-2.229 -4.8,-1.798 -3.59,-1.291 -2.849,-1.408 -2.224,-1.955 -0.663,-2.463 0.517,-2.073 1.551,-1.525 5.112,-1.29 5.034,1.173 1.551,1.31 0.517,1.662 v 2.659 h 6.79 v -4.888 l -1.113,-3.51 -3.336,-2.551 -4.585,-1.584 z m -88.398,0.978 v 5.983 h 6.712 v 28.506 h -6.321 v 6.022 h 20.486 v -6.022 h -6.4 v -34.489 z m 0.447,60.02 -11.402,114.817 18.846,6.81 4.592,-2.85 6.177,-2.97 8.71,-2.89 10.175,-2.257 10.571,-0.752 11.145,0.812 9.998,2.434 8.849,4.059 7.701,5.681 6.235,7.018 4.454,8.067 2.673,9.116 0.89,10.165 -0.94,9.374 -2.821,8.641 -4.701,7.908 -6.582,7.176 -7.869,5.959 -8.72,4.256 -9.572,2.554 -10.422,0.851 -7.226,-0.406 -7.107,-1.217 -6.989,-2.029 -6.869,-2.841 -11.244,-5.82 -6.493,-4.474 -6.176,-6.493 -16.947,22.647 4.277,4.592 6.961,5.865 7.342,5.083 7.723,4.3 8.104,3.519 8.485,2.737 8.866,1.955 9.247,1.173 9.628,0.391 17.134,-1.386 7.995,-1.732 7.614,-2.425 7.233,-3.118 6.852,-3.811 6.471,-4.503 6.09,-5.197 5.568,-5.741 4.825,-6.057 4.083,-6.375 3.341,-6.691 2.598,-7.008 1.857,-7.324 1.113,-7.642 0.371,-7.958 -1.385,-14.876 -1.733,-6.956 -2.425,-6.635 -3.118,-6.312 -3.81,-5.991 -9.701,-11.016 -5.706,-4.9 -6.112,-4.246 -6.518,-3.593 -6.923,-2.94 -15.065,-3.92 -16.688,-1.306 -9.453,0.515 -8.562,1.385 -7.671,2.257 -6.78,3.128 h -0.634 l 1.584,-9.186 5.859,-54.795 h 62.24 v 29.14 h 28.347 v -55.746 z");

    //vector<vector<Point>> itsfive_poly = itsfive.plot(500, 0., 1.);

    SVGPath anis_drink_bottom("m 262.325,478.45 0.294,3.554 0.862,3.451 1.403,3.331 1.913,3.194 2.397,3.038 2.85,2.866 3.276,2.676 3.673,2.468 4.041,2.243 4.381,2.001 4.692,1.74 4.975,1.464 5.228,1.169 5.454,0.856 5.651,0.527 5.818,0.179 h 2.526 l 5.819,-0.179 5.65,-0.527 5.454,-0.856 5.229,-1.169 4.974,-1.464 4.692,-1.74 4.381,-2.001 4.041,-2.243 3.673,-2.468 3.276,-2.676 2.85,-2.866 2.396,-3.038 1.914,-3.194 1.402,-3.331 0.862,-3.451 0.294,-3.554 -0.091,-2.179 -0.267,-2.165 -0.432,-2.143 -0.583,-2.111 -1.582,-4.097 -2.057,-3.873 H 267.339 l -2.058,3.873 -1.582,4.097 -0.584,2.111 -0.432,2.143 -0.267,2.165 z");

    auto anis_drink_bottom_poly = anis_drink_bottom.plot(500, 0., 1.);

    //anis_drink_bottom_poly = simplify_plot(anis_drink_bottom_poly);

    // auto anis_drink_bottom_poly = itsfive.line_segments();

    for(auto p : anis_drink_bottom_poly)
    {
        auto c = MeshCover(p);

        cout << STLOutput(c.triangles()) << endl;
    }

    return 0;
}